shiny::runApp()
setwd("~/INFO 201/usahomeless")
runApp()
homeless.df <- read.csv('./data/homeless.csv')
raw.state.data <- read.csv('./data/HomelessPopulationState.csv', header = TRUE, stringsAsFactors = FALSE)
state.data <- raw.state.data[-55,]
wa.plot.data <- filter(homeless.df, State == 'WA', Measures == "Total Homeless") %>%
select(State, Count, Year, Measures, CoC.Name)
wa.plot.data$Count2 = as.numeric(gsub("\\,", "", wa.plot.data$Count))
sea.plot.data <- filter(homeless.df, State == "WA", CoC.Name == "Seattle/King County CoC", Measures %in% c("Sheltered Homeless", "Unsheltered Homeless")) %>%
select(State, Count, Year, Measures, CoC.Name)
sea.plot.data$Count2 = as.numeric(gsub("\\,", "", sea.plot.data$Count))
runApp()
source('~/INFO 201/usahomeless/temporary.R')
library(map)
install.packages(maps)
install.packages("maps")
source('~/INFO 201/usahomeless/temporary.R')
blank_layer <- list(
title = "",
showgrid = F,
showticklabels = F,
zeroline = F)
source('~/INFO 201/usahomeless/temporary.R')
library(dplyr)
library(dplyr)
library(plotly)
library(maps)
blank_layer <- list(
title = "",
showgrid = F,
showticklabels = F,
zeroline = F)
p <- map_data("county") %>%
filter(region == 'washington') %>%
group_by(group) %>%
plot_ly(
x = ~long,
y = ~lat,
fillcolor = 'white',
hoverinfo = "none") %>%
add_polygons(
line = list(color = 'black', width = 0.5)) %>%
layout(
xaxis = blank_layer,
yaxis = blank_layer)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="county-level/create-polygons")
chart_link
source('~/INFO 201/usahomeless/temporary.R')
source('~/INFO 201/usahomeless/temporary.R')
install.packages(ggmap)
install.packages("ggmap")
source('~/INFO 201/usahomeless/temporary.R')
source('~/INFO 201/usahomeless/temporary.R')
source('~/INFO 201/usahomeless/temporary.R')
setwd(~/INFO 201/usahomeless)
setwd("~/INFO 201/usahomeless")
source('~/INFO 201/usahomeless/temporary.R')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggmap)
library(dplyr)
food <- read.csv("data/Food_Banks.csv", stringsAsFactors = FALSE)
map.seattle_city <- qmap("seattle", zoom = 11, source = "stamen", maptype = "toner", darken = c(.3, "#BBBBBB "))
install.packages("ggmap")
install.packages("ggmap")
install.packages("ggmap")
source('~/INFO 201/usahomeless/temporary.R')
library(ggplot2)
library(ggmap)
library(dplyr)
food <- read.csv("data/Food_Banks.csv", stringsAsFactors = FALSE)
map.seattle_city <- qmap("seattle", zoom = 11,
source = "stamen",
maptype = "toner",
darken = c(.3, "#BBBBBB "))
shiny::runApp()
runApp()
devtools::install_github("dkahle/ggmap")
ggplot2 v2.2.1
runApp()
runApp()
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(ggmap)
install.packages("ggmap")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ggmap)
shiny::runApp()
install.packages("shinythemes")
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
